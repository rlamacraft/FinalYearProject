var _user$project$ParsingHandling$StringStatement = function (a) {
	return {ctor: 'StringStatement', _0: a};
};
var _user$project$ParsingHandling$Command = F3(
	function (a, b, c) {
		return {ctor: 'Command', _0: a, _1: b, _2: c};
	});
var _user$project$ParsingHandling$processStatement = F3(
	function (name, content, rawContent) {
		var _p0 = name;
		if (_p0 === '_string') {
			return _user$project$ParsingHandling$StringStatement(rawContent);
		} else {
			return A3(_user$project$ParsingHandling$Command, name, content, rawContent);
		}
	});
var _user$project$ParsingHandling$statementDecoder = A4(
	_elm_lang$core$Json_Decode$object3,
	_user$project$ParsingHandling$processStatement,
	A2(_elm_lang$core$Json_Decode_ops[':='], 'name', _elm_lang$core$Json_Decode$string),
	A2(
		_elm_lang$core$Json_Decode_ops[':='],
		'content',
		_elm_lang$core$Json_Decode$list(
			_elm_community$json_extra$Json_Decode_Extra$lazy(
				function (_p1) {
					return _user$project$ParsingHandling$statementDecoder;
				}))),
	A2(_elm_lang$core$Json_Decode_ops[':='], 'rawContent', _elm_lang$core$Json_Decode$string));
var _user$project$ParsingHandling$buildStatementTree = function (parsedStatementsJson) {
	var _p2 = A2(
		_elm_lang$core$Json_Decode$decodeString,
		_elm_lang$core$Json_Decode$list(_user$project$ParsingHandling$statementDecoder),
		parsedStatementsJson);
	if (_p2.ctor === 'Err') {
		return _elm_lang$core$Native_List.fromArray(
			[
				_user$project$ParsingHandling$StringStatement('error')
			]);
	} else {
		return _p2._0;
	}
};
